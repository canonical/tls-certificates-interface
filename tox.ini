# Copyright 2021 Canonical Ltd.
# See LICENSE file for licensing details.
[tox]
skipsdist=True
skip_missing_interpreters = True
envlist = lint, static, unit

[vars]
src_path = {toxinidir}/src/
lib_path = {toxinidir}/lib/
unit_test_path = {toxinidir}/tests/unit
integration_test_path = {toxinidir}/tests/integration
all_path = {[vars]src_path} {[vars]lib_path} {[vars]unit_test_path} {[vars]integration_test_path}

[testenv]
setenv =
    PYTHONPATH = {toxinidir}:{toxinidir}/lib:{[vars]src_path}
    PYTHONBREAKPOINT=ipdb.set_trace
deps =
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/test-requirements.txt
    juju=={env:LIBJUJU_VERSION:3.2.2}
passenv =
    PYTHONPATH
    HOME
    CHARM_BUILD_DIR
    MODEL_SETTINGS

[testenv:fmt]
description = Apply coding style standards to code
commands =
    isort {[vars]all_path}
    black {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
commands =
    pflake8 {[vars]unit_test_path}
    isort --check-only --diff {[vars]all_path}
    black --check --diff {[vars]all_path}

[testenv:static]
description = Run static analysis checks
setenv =
    PYTHONPATH = ""
commands =
    mypy {[vars]lib_path} {posargs}

[testenv:unit]
description = Run unit tests
commands =
    coverage run --source={[vars]lib_path} -m pytest -v --tb native {[vars]unit_test_path} -s {posargs}
    coverage report

[testenv:integration-v2]
description = Run integration tests
commands =
    pytest --asyncio-mode=auto -v --tb native {[vars]integration_test_path}/v2 --log-cli-level=INFO -s {posargs}

[testenv:integration-v3]
description = Run integration tests
commands =
    pytest --asyncio-mode=auto -v --tb native {[vars]integration_test_path}/v3 --log-cli-level=INFO -s {posargs}
